apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notes-chart.fullname" . }}
  labels:
    {{- include "notes-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "notes-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "notes-chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "notes-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres-credentials
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-credentials
            - name: "DATABASE_URL"
              value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/notesdb?schema=notes_schema
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      # initContainers:
      #   - name: wait-for-db
      #     image: postgres:9.6
      #     env: 
      #       - name: PGHOST
      #         value: postgres
      #       - name: PGUSER
      #         valueFrom:
      #           secretKeyRef:
      #             key: POSTGRES_USER
      #             name: postgres-credentials
      #       - name: PGPASSWORD
      #         valueFrom:
      #           secretKeyRef:
      #             key: POSTGRES_PASSWORD
      #             name: postgres-credentials
      #       - name: PGDATABASE
      #         valueFrom:
      #           secretKeyRef:
      #             key: POSTGRES_DB
      #             name: postgres-credentials
      #     command:
      #       - /bin/sh
      #       - -c
      #       - |
      #         while ! psql -c 'select 1' > /dev/null 2>&1; do
      #             echo "waiting for database"
      #             sleep 1
      #         done
      #         echo "database is ready!"
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
